package com.main.datn_sd31.controller.admin_controller.dotGiamGia;

import com.main.datn_sd31.entity.DotGiamGia;
import com.main.datn_sd31.repository.dotGiamGia.DotGiamGiaRepository;
import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDateTime;
import java.util.List;

@Controller
@RequestMapping("/admin/dot-giam-gia")
@RequiredArgsConstructor
public class dotGiamGiaController {

    private final DotGiamGiaRepository dotGiamGiaRepository;

    //  C·∫≠p nh·∫≠t tr·∫°ng th√°i t·ª± ƒë·ªông theo th·ªùi gian
    private void capNhatTrangThaiTuDong() {
        List<DotGiamGia> list = dotGiamGiaRepository.findAll();
        LocalDateTime now = LocalDateTime.now();

        for (DotGiamGia dgg : list) {
            if (dgg.getNgayBatDau() == null || dgg.getNgayKetThuc() == null) continue;

            if (now.isBefore(dgg.getNgayBatDau())) {
                dgg.setTrangThai(0); // Chu·∫©n b·ªã √°p d·ª•ng
            } else if (now.isAfter(dgg.getNgayKetThuc())) {
                dgg.setTrangThai(2); // Ng·ª´ng ho·∫°t ƒë·ªông
            } else {
                dgg.setTrangThai(1); // ƒêang ho·∫°t ƒë·ªông
            }
        }
        dotGiamGiaRepository.saveAll(list);
    }

    //  Trang ch√≠nh: hi·ªÉn th·ªã danh s√°ch + form th√™m/s·ª≠a
    @GetMapping
    public String hienthi(Model model) {
        capNhatTrangThaiTuDong();
        model.addAttribute("dotGiamGia", new DotGiamGia());
        model.addAttribute("dotGiamGias", dotGiamGiaRepository.findAll());
        return "admin/pages/dot-giam-gia/dot-giam-gia";
    }
//    @GetMapping("/admin/dot-giam-gia")
//    public String index(Model model,
//                        @RequestParam(defaultValue = "0") int page) {
//        int pageSize = 5; // 5 ph·∫ßn t·ª≠ m·ªói trang
//        Pageable pageable = PageRequest.of(page, pageSize, Sort.by("ngayBatDau").descending());
//
//        Page<DotGiamGia> dotGiamGiaPage = dotGiamGiaRepository.findAll(pageable);
//
//        model.addAttribute("dotGiamGia", new DotGiamGia());
//        model.addAttribute("dotGiamGias", dotGiamGiaPage.getContent()); // danh s√°ch hi·ªán t·∫°i
//        model.addAttribute("totalPages", dotGiamGiaPage.getTotalPages());
//        model.addAttribute("currentPage", page);
//
//        return "admin/pages/dotGiamGia/dotGiamGia";
//    }

    //  Khi click s·ª≠a ‚Üí load l·∫°i form v·ªõi d·ªØ li·ªáu c≈©
    @GetMapping("/edit/{id}")
    public String edit(@PathVariable Integer id, Model model) {
        capNhatTrangThaiTuDong();
        DotGiamGia dotGiamGia = dotGiamGiaRepository.findById(id).orElse(new DotGiamGia());
        model.addAttribute("dotGiamGia", dotGiamGia);
        model.addAttribute("dotGiamGias", dotGiamGiaRepository.findAll());
        return "admin/pages/dot-giam-gia/dot-giam-gia";
    }

    //  L∆∞u (th√™m ho·∫∑c c·∫≠p nh·∫≠t)
    @PostMapping("/save")
    public String save(@Valid @ModelAttribute("dotGiamGia") DotGiamGia dotGiamGia,
                       BindingResult result,
                       Model model) {

        // Ki·ªÉm tra ng√†y b·∫Øt ƒë·∫ßu tr∆∞·ªõc ng√†y k·∫øt th√∫c
        if (dotGiamGia.getNgayBatDau() != null && dotGiamGia.getNgayKetThuc() != null
                && dotGiamGia.getNgayBatDau().isAfter(dotGiamGia.getNgayKetThuc())) {
            result.rejectValue("ngayBatDau", null, "Ng√†y b·∫Øt ƒë·∫ßu ph·∫£i tr∆∞·ªõc ng√†y k·∫øt th√∫c");
        }

        if (result.hasErrors()) {
            result.getAllErrors().forEach(error -> System.out.println(error.toString()));
            model.addAttribute("dotGiamGias", dotGiamGiaRepository.findAll());
            return "admin/pages/dot-giam-gia/dot-giam-gia"; // Quay l·∫°i view n·∫øu l·ªói
        }
        if (dotGiamGia.getId() == null) {
            // TH√äM M·ªöI
            dotGiamGia.setNgayTao(LocalDateTime.now());
        } else {
            // S·ª¨A: L·∫•y b·∫£n g·ªëc ƒë·ªÉ gi·ªØ nguy√™n ng√†y t·∫°o
            DotGiamGia existing = dotGiamGiaRepository.findById(dotGiamGia.getId()).orElse(null);
            if (existing != null) {
                dotGiamGia.setNgayTao(existing.getNgayTao());
            }
        }


        // Ng√†y s·ª≠a lu√¥n ƒë∆∞·ª£c c·∫≠p nh·∫≠t
        dotGiamGia.setNgaySua(LocalDateTime.now());
        int adminId = 1; // üëà ID m·∫∑c ƒë·ªãnh cho admin

        if (dotGiamGia.getId() == null) {
            dotGiamGia.setNguoiTao(adminId);
        } else {
            dotGiamGia.setNguoiTao(adminId);
        }
        capNhatTrangThaiTuDong();
        dotGiamGiaRepository.save(dotGiamGia);

        return "redirect:/admin/dot-giam-gia";
    }

    //  Xo√°
    @GetMapping("/delete/{id}")
    public String delete(@PathVariable Integer id) {
        dotGiamGiaRepository.deleteById(id);
        return "redirect:/admin/dot-giam-gia";
    }
}